---
- name: Configure Network and Domain Settings
  hosts: all
  gather_facts: yes
  vars:
    csv_file: "files/vm_settings.csv"

  tasks:
    - name: Read CSV file
      community.general.read_csv:
        path: "{{ csv_file }}"
        delimiter: ","
      register: csv_data

    - name: Process CSV data
      set_fact:
        hosts_data: "{{ csv_data | dict2items | map(attribute='value') | list }}"

    - name: Configure network settings
      block:
        - name: Set static IP address and DNS settings
          ansible.windows.win_shell:
            cmd: |
              netsh interface ip set address name="{{ item.hostname }}" static {{ item.ip_address }} {{ item.subnet_prefix }} {{ item.default_gateway }}
              netsh interface ip set dns name="{{ item.hostname }}" static {{ item.preferred_dns }}
              netsh interface ip add dns name="{{ item.hostname }}" {{ item.alternative_dns }} index=2
          when: item.ip_configuration_type == 'static'
          loop: "{{ hosts_data }}"

        - name: Set DHCP for network interface
          ansible.windows.win_shell:
            cmd: |
              netsh interface ip set address name="{{ item.hostname }}" source=dhcp
              netsh interface ip set dns name="{{ item.hostname }}" source=dhcp
          when: item.ip_configuration_type == 'dynamic'
          loop: "{{ hosts_data }}"

    # - name: Manage domain and workgroup membership
    #   block:
    #     - name: Join domain
    #       microsoft.ad.domain:
    #         name: "{{ item.domain }}"
    #         dns_domain_name: "{{ item.domain }}"
    #         domain_admin_user: "admin_user"  # Replace with your domain admin user
    #         domain_admin_password: "admin_password"  # Replace with your domain admin password
    #         state: "present"
    #       when: item.domain != '' and item.workgroup == ''
    #       loop: "{{ hosts_data }}"

    #     - name: Remove from domain and join workgroup
    #       ansible.windows.win_shell:
    #         script: |
    #           # Remove from domain
    #           Remove-Computer -UnjoinDomainCredential (New-Object PSCredential ("admin_user", (ConvertTo-SecureString "admin_password" -AsPlainText -Force))) -PassThru -Verbose -Restart
    #           # Join workgroup
    #           Add-Computer -WorkGroupName "{{ item.workgroup }}" -Restart
    #       when: item.domain == '' and item.workgroup != ''
    #       loop: "{{ hosts_data }}"

    #     - name: Ensure the machine is in the correct workgroup
    #       ansible.windows.win_shell:
    #         script: |
    #           # Join workgroup
    #           Add-Computer -WorkGroupName "{{ item.workgroup }}" -Restart
    #       when: item.domain == '' and item.workgroup != ''
    #       loop: "{{ hosts_data }}"
